plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'java'
    id 'application'
    id 'edu.sc.seis.launch4j' version '2.4.6'
    id 'edu.sc.seis.macAppBundle' version '2.3.0'
    id "nebula.ospackage" version "8.2.0"
    id 'org.gradle.crypto.checksum' version '1.2.0'
    id 'com.palantir.git-version' version '0.12.2'
	id 'io.spring.dependency-management' version '1.0.1.RELEASE' //for logging - log4j
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'com.github.signum-network:signumj:v1.0.0'

    // implementation 'com.github.burst-apps-team:blocktalk:121e144cfe'   
    implementation 'com.github.signum-network:signum-smartj:1eb7a1587c' 

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.15'
    implementation 'com.squareup.okhttp3:okhttp:4.4.0'

    implementation 'com.github.jiconfont:jiconfont-swing:1.0.0'
    //implementation 'com.github.jiconfont:jiconfont-font_awesome:4.7.0.1'
    implementation 'com.github.meisenla:jiconfont-font_awesome:8be36e8ba9'
    
    implementation 'com.github.jjos2372:java-sdk:4739af9c11'
    
    implementation 'com.github.sealedtx:bitcoin-cash-converter:1.0'
    
    //implementation 'net.java.dev.jna:jna-platform:5.7.0'
    //implementation 'net.java.dev.jna:jna:5.7.0'

	//implementation 'com.github.weisj:darklaf-core:2.5.5'
    //implementation 'com.bulenkov:darcula:2018.2'
    implementation 'com.github.jjos2372:Darcula:3b47831130' // this one is compatible with Java16
    //implementation 'com.formdev:flatlaf-intellij-themes:1.0'
    
    implementation 'com.dorkbox:SystemTray:3.17'

    implementation 'org.apache.commons:commons-text:1.8'

    implementation 'io.github.novacrypto:BIP39:2019.01.27'

    implementation 'jfree:jfreechart:1.0.13'

    implementation 'com.github.kenglxn.QRGen:javase:2.6.0'

    implementation 'io.github.monero-ecosystem:monero-java:0.2.1'

    implementation 'fr.marcwrobel:jbanking:1.0'

    implementation 'com.github.jjos2372:ledger4j:06fb465b5a'
    
    implementation 'org.nanohttpd:nanohttpd:2.3.1'

	//logging
	implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
	implementation 'org.apache.logging.log4j:log4j-core:2.13.3'

    // Use JUnit test framework
    testImplementation("org.junit.platform:junit-platform-engine:1.6.1")
    testImplementation("org.junit.platform:junit-platform-launcher:1.6.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.1")
}
test {
    useJUnitPlatform()
}
// If we want to refresh our libraries (get a new snapshot)
configurations.all {
    // resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

// Define the main class for the application
mainClassName = 'BTDEX'

description = 'A decentralized exchange system running on the Burst blockchain.'

def details = versionDetails()

task versionProp()  {
    doFirst {
        new File(sourceSets.main.output.resourcesDir, "/version.properties").text = "version:${details.lastTag}"
    }
}

jar {
	// Needed by the loggin library
    manifest {
        attributes 'Multi-Release': 'true'
    }
}

shadowJar{
    archiveName = "${baseName}-${classifier}.${extension}"
}
shadowJar.dependsOn versionProp

createExe {
    outfile = 'btdex.exe'
    icon = "${projectDir}/dist/btdex.ico"
    jreMinVersion = '1.8.0'
    copyright = 'BTDEX'
    companyName = 'https://btdex.trade'
    textVersion = details.lastTag

    mainClassName = project.mainClassName
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
}

createDmg.enabled = false
macAppBundle {
    mainClassName = project.mainClassName
    version = details.lastTag
    icon = "${projectDir}/dist/btdex.icns"
    appStyle = 'Oracle'
    appName = project.applicationName
    dmgName = "${->project.name}-mac"
    runtimeConfigurationName = 'shadow'
    jarTask = 'shadowJar'
    jvmVersion = "1.8+"
}

task makeDeb(type: Deb, dependsOn: shadowJar) {
    maintainer 'btdex.trade'
    license	'GPL-3+'
    version details.lastTag.substring(1)
    release '1'
    arch 'all'

    requires('java8-runtime').or('java9-runtime')
    requires('xdg-utils')

    from('dist/copyright'){
        into '/usr/share/doc/btdex'
    }

    into '/opt/btdex'
    from('dist/btdex.sh'){
        fileMode 0755
    }
    from(new File(sourceSets.main.output.resourcesDir, "/icon.png"))
    link('/usr/share/pixmaps/btdex.png', '/opt/btdex/icon.png')
    link('/usr/bin/btdex', '/opt/btdex/btdex.sh')
    from('dist/btdex.desktop'){
        into '/usr/share/applications'
    }
    from(project.tasks.shadowJar.outputs.files)
}

import org.gradle.crypto.checksum.Checksum

task makeDebChecksum(type: Checksum, dependsOn: [makeDeb]) {
}
task release(type: Checksum, dependsOn: [shadowJar, createExe, createAppZip, makeDeb]) {
    files = project.tasks.shadowJar.outputs.files.plus(files(['build/launch4j/btdex.exe',
    	'build/distributions/btdex-mac.zip'])).plus(project.tasks.makeDeb.outputs.files)
}
